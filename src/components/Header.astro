---
// Header.astro
import { useTranslations } from "../utils/useTranslations.ts";
import { navLinks } from "../config/navLinks.ts";
import { isFeatureActive, isValidToggleKey } from "../config/siteConfig.ts";
const { t } = useTranslations(Astro.url);
---

<header
  class="fixed top-0 left-0 w-full bg-black/80 text-yellow-400 z-50 shadow-md"
>
  <div class="max-w-6xl mx-auto px-6 py-4 flex justify-between items-center">
    <a href="/" class="text-xl font-bold tracking-tight hover:text-yellow-300">
      Torghatten Maraton
    </a>

    <!-- Desktop -->
    <nav class="hidden md:flex space-x-6">
      {
        navLinks
          .filter(
            (link) =>
              !link.toggle ||
              (isValidToggleKey(link.toggle) && isFeatureActive(link.toggle))
          )
          .map((link) =>
            "dropdown" in link ? (
              <div class="relative group">
                <button class="hover:underline whitespace-nowrap">
                  {t(`nav.${link.label}`)}
                </button>
                <div class="absolute left-0 min-w-[200px] bg-black/90 rounded shadow-md z-50 hidden group-hover:flex flex-col">
                  {link.dropdown.map((item) => (
                    <a
                      href={item.href}
                      target={item.external ? "_blank" : undefined}
                      rel={item.external ? "noopener noreferrer" : undefined}
                      class="block px-4 py-2 hover:bg-yellow-500 hover:text-black whitespace-nowrap"
                    >
                      {t(`nav.${item.label}`)}
                    </a>
                  ))}
                </div>
              </div>
            ) : (
              <a href={link.href} class="hover:underline whitespace-nowrap">
                {t(`nav.${link.label}`)}
              </a>
            )
          )
      }
    </nav>

    <!-- Mobilknapp -->
    <button id="mobile-menu-toggle" class="md:hidden" aria-label="Meny">
      â˜°
    </button>
  </div>

  <!-- Mobilmeny -->
  <nav id="mobile-menu" class="md:hidden hidden px-6 pb-4 space-y-2 text-sm">
    {
      navLinks
        .filter(
          (link) =>
            !link.toggle ||
            (isValidToggleKey(link.toggle) && isFeatureActive(link.toggle))
        )
        .map((link) =>
          "dropdown" in link ? (
            <details>
              <summary class="cursor-pointer hover:text-yellow-300">
                {t(`nav.${link.label}`)}
              </summary>
              <div class="ml-4 pl-2 border-l border-yellow-700 space-y-1">
                {link.dropdown.map((item) => (
                  <a
                    href={item.href}
                    target={item.external ? "_blank" : undefined}
                    rel={item.external ? "noopener noreferrer" : undefined}
                    class="block hover:text-yellow-300"
                  >
                    {t(`nav.${item.label}`)}
                  </a>
                ))}
              </div>
            </details>
          ) : (
            <a href={link.href} class="block hover:text-yellow-300">
              {t(`nav.${link.label}`)}
            </a>
          )
        )
    }

    <!-- SprÃ¥kvalg -->
    <div class="pt-2 border-t border-yellow-700">
      <a href="?lang=nb" class="mr-2 hover:text-yellow-300">ðŸ‡³ðŸ‡´ Norsk</a>
      <a href="?lang=en" class="hover:text-yellow-300">ðŸ‡¬ðŸ‡§ English</a>
    </div>
  </nav>
</header>

<script>
  document
    .getElementById("mobile-menu-toggle")
    ?.addEventListener("click", () => {
      const menu = document.getElementById("mobile-menu");
      if (menu) menu.classList.toggle("hidden");
    });
</script>
